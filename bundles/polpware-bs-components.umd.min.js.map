{"version":3,"sources":["ng://@polpware/bs-components/lib/models/breadcrumb.interface.ts","ng://@polpware/bs-components/lib/components/breadcrumb/breadcrumb.component.ts","ng://@polpware/bs-components/lib/services/breadcrumb-clipboard.service.ts","ng://@polpware/bs-components/lib/bs-components.module.ts"],"names":["NO_ACTION","URL_LINK","ROUTER_LINK","CUSTOM_ACTION","BreadcrumbComponent","prototype","ngOnInit","this","update","ngOnChanges","items","forEach","e","routerLink","kind","ActionKind","url","action","interItems","activeItem","length","i","push","Component","args","selector","template","Input","listClasses","inactiveItemClasses","activeItemClasses","BreadcrumbClipboardService","paste","clipboard","next","Injectable","providedIn","BehaviorSubject","PolpBsComponentsModule","NgModule","declarations","imports","CommonModule","RouterModule","exports"],"mappings":"odACIA,UAAA,EACAC,SAAA,EACAC,YAAA,EACAC,cAAA,yHCQJ,IAAAC,GAeIA,EAAAC,UAAAC,SAAA,WACIC,KAAKC,UAGTJ,EAAAC,UAAAI,YAAA,WACIF,KAAKC,UAGDJ,EAAAC,UAAAG,OAAR,WAmBI,GAhBAD,KAAKG,MAAMC,QAAQ,SAAAC,GACXA,EAAEC,WACFD,EAAEE,KAAOC,EAAWb,YACbU,EAAEI,IACTJ,EAAEE,KAAOC,EAAWd,SACbW,EAAEK,OACTL,EAAEE,KAAOC,EAAWZ,cAEpBS,EAAEE,KAAOC,EAAWf,YAI5BO,KAAKW,WAAa,GAClBX,KAAKY,WAAa,KAGM,EAApBZ,KAAKG,MAAMU,OAAY,CAEvB,IAAK,IAAIC,EAAI,EAAGA,EAAId,KAAKG,MAAMU,OAAS,EAAGC,IACvCd,KAAKW,WAAWI,KAAKf,KAAKG,MAAMW,IAGpCd,KAAKY,WAAaZ,KAAKG,MAAMH,KAAKG,MAAMU,OAAS,yBAhD5DG,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,qBACVC,SAAA,4oCAKCC,EAAAA,2BACAA,EAAAA,mCACAA,EAAAA,iCACAA,EAAAA,SAyCLvB,GAnDA,SAAAA,IAOaG,KAAAG,MAA2B,GAC3BH,KAAAqB,YAAsB,aACtBrB,KAAAsB,oBAA8B,kBAC9BtB,KAAAuB,kBAA4B,yBAErCvB,KAAAW,WAAgC,GAChCX,KAAAY,WAA8B,KCzBlC,IAAAY,GAkBIA,EAAA1B,UAAA2B,MAAA,SAAMtB,GACFH,KAAK0B,UAAUC,KAAKxB,wBAZ3ByB,EAAAA,WAAUX,KAAA,CAAC,CACRY,WAAY,uJAMZ,SAAAL,IACIxB,KAAK0B,UAAY,IAAII,EAAAA,gBAAgB,ICf7C,IAAAC,uBAKCC,EAAAA,SAAQf,KAAA,CAAC,CACNgB,aAAc,CACVpC,GAEJqC,QAAS,CACLC,EAAAA,aACAC,EAAAA,cAEJC,QAAS,CACLxC,OAG8BkC,GAZtC,SAAAA","sourcesContent":["export enum ActionKind {\n    NO_ACTION = 0,\n    URL_LINK = 1,\n    ROUTER_LINK = 2,\n    CUSTOM_ACTION = 3\n}\n\nexport interface IBreadcrumbItem {\n    title: string;\n    routerLink?: string;\n    queryParams?: { [key: string]: any };\n    url?: string;\n    action?: () => void;\n    kind?: ActionKind;\n}\n\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\n\nimport {\n    ActionKind,\n    IBreadcrumbItem\n} from '../../models/breadcrumb.interface';\n\n/*\n Presumptions: \n 1. items are fixed at the moment of page init\n*/\n\n@Component({\n    selector: 'polp-bs-breadcrumb',\n    templateUrl: './breadcrumb.component.html',\n    styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges {\n\n    @Input() items: IBreadcrumbItem[] = [];\n    @Input() listClasses: string = 'breadcrumb';\n    @Input() inactiveItemClasses: string = 'breadcrumb-item';\n    @Input() activeItemClasses: string = 'breadcrumb-item active';\n\n    interItems: IBreadcrumbItem[] = [];\n    activeItem: IBreadcrumbItem = null;\n\n    ngOnInit() {\n        this.update();\n    }\n\n    ngOnChanges() {\n        this.update();\n    }\n\n    private update() {\n\n        // Pre-process data\n        this.items.forEach(e => {\n            if (e.routerLink) {\n                e.kind = ActionKind.ROUTER_LINK;\n            } else if (e.url) {\n                e.kind = ActionKind.URL_LINK;\n            } else if (e.action) {\n                e.kind = ActionKind.CUSTOM_ACTION;\n            } else {\n                e.kind = ActionKind.NO_ACTION;\n            }\n        });\n\n        this.interItems = [];\n        this.activeItem = null;\n        // Set up interItems and activeItem, and items are\n        // fixed this moment and thus interItems and activeItem\n        if (this.items.length > 0) {\n            // Split the array\n            for (let i = 0; i < this.items.length - 1; i++) {\n                this.interItems.push(this.items[i]);\n            }\n\n            this.activeItem = this.items[this.items.length - 1];\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    IBreadcrumbItem\n} from '../models/breadcrumb.interface';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BreadcrumbClipboardService {\n\n    readonly clipboard: BehaviorSubject<IBreadcrumbItem[]>;\n\n    constructor() {\n        this.clipboard = new BehaviorSubject([]);\n    }\n\n    paste(items: IBreadcrumbItem[]) {\n        this.clipboard.next(items);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BreadcrumbComponent } from './components/breadcrumb/breadcrumb.component';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    declarations: [\n        BreadcrumbComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [\n        BreadcrumbComponent\n    ]\n})\nexport class PolpBsComponentsModule { }\n"]}