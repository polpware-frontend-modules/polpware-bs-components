import { Validators } from '@angular/forms';
export function makeValidations(data) {
    var validations = Object.keys(data);
    var x = validations.map(function (a) {
        switch (a) {
            case 'required':
                return Validators.required;
            case 'min':
                return Validators.min;
            case 'max':
                return Validators.max;
            case 'pattern':
                return Validators.pattern;
            default:
                return null;
        }
    });
    x = x.filter(function (a) { return !!a; });
    return Validators.compose(x);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1oZWxwZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9scHdhcmUvYnMtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi91dGlscy9mb3JtLWhlbHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFZekQsTUFBTSxVQUFVLGVBQWUsQ0FBQyxJQUFzQjtJQUNsRCxJQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RDLElBQUksQ0FBQyxHQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsVUFBQSxDQUFDO1FBQ3JCLFFBQVEsQ0FBQyxFQUFFO1lBQ1AsS0FBSyxVQUFVO2dCQUNYLE9BQU8sVUFBVSxDQUFDLFFBQVEsQ0FBQztZQUMvQixLQUFLLEtBQUs7Z0JBQ04sT0FBTyxVQUFVLENBQUMsR0FBRyxDQUFDO1lBQzFCLEtBQUssS0FBSztnQkFDTixPQUFPLFVBQVUsQ0FBQyxHQUFHLENBQUM7WUFDMUIsS0FBSyxTQUFTO2dCQUNWLE9BQU8sVUFBVSxDQUFDLE9BQU8sQ0FBQztZQUM5QjtnQkFDSSxPQUFPLElBQUksQ0FBQztTQUNuQjtJQUNMLENBQUMsQ0FBQyxDQUFDO0lBRUgsQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsQ0FBQyxFQUFILENBQUcsQ0FBQyxDQUFDO0lBRXZCLE9BQU8sVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFrQixDQUFDLENBQUM7QUFDbEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZhbGlkYXRvckZuLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5cclxuZXhwb3J0IHR5cGUgSVZhbGlkYXRpb25zU3BlYyA9IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH07XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElJbnB1dEZpZWxkU3BlYyB7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICBsYWJlbDogc3RyaW5nO1xyXG4gICAgdmFsdWU6IGFueTtcclxuICAgIGNhdGVnb3J5OiBzdHJpbmc7XHJcbiAgICB2YWxpZGF0aW9uczogSVZhbGlkYXRpb25zU3BlYztcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VWYWxpZGF0aW9ucyhkYXRhOiBJVmFsaWRhdGlvbnNTcGVjKSB7XHJcbiAgICBjb25zdCB2YWxpZGF0aW9ucyA9IE9iamVjdC5rZXlzKGRhdGEpO1xyXG4gICAgbGV0IHggPSB2YWxpZGF0aW9ucy5tYXAoYSA9PiB7XHJcbiAgICAgICAgc3dpdGNoIChhKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ3JlcXVpcmVkJzpcclxuICAgICAgICAgICAgICAgIHJldHVybiBWYWxpZGF0b3JzLnJlcXVpcmVkO1xyXG4gICAgICAgICAgICBjYXNlICdtaW4nOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFZhbGlkYXRvcnMubWluO1xyXG4gICAgICAgICAgICBjYXNlICdtYXgnOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFZhbGlkYXRvcnMubWF4O1xyXG4gICAgICAgICAgICBjYXNlICdwYXR0ZXJuJzpcclxuICAgICAgICAgICAgICAgIHJldHVybiBWYWxpZGF0b3JzLnBhdHRlcm47XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICB4ID0geC5maWx0ZXIoYSA9PiAhIWEpO1xyXG5cclxuICAgIHJldHVybiBWYWxpZGF0b3JzLmNvbXBvc2UoeCBhcyBWYWxpZGF0b3JGbltdKTtcclxufVxyXG5cclxuIl19