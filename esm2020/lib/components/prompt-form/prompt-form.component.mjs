import { Component, HostListener, Input } from '@angular/core';
import { FormControl } from '@angular/forms';
import { faQuestionCircle } from '@fortawesome/free-regular-svg-icons';
import { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';
import { DefaultFormBaseComponent } from '@polpware/ngx-form-common';
import { v4 } from 'uuid';
import { makeValidations } from '../../utils/form-helper';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@fortawesome/angular-fontawesome";
import * as i3 from "@tinymce/tinymce-angular";
import * as i4 from "@angular/common";
import * as i5 from "ngx-bootstrap/popover";
import * as i6 from "ngx-autosize";
import * as i7 from "@40three/ngx-autofocus-directive";
import * as i8 from "ngx-mask";
var KEY_CODE;
(function (KEY_CODE) {
    KEY_CODE[KEY_CODE["ENTER"] = 13] = "ENTER";
})(KEY_CODE || (KEY_CODE = {}));
function uuidv4() {
    return 'alpha-' + v4();
}
let formId = 1;
export class PromptFormComponent extends DefaultFormBaseComponent {
    constructor(_builder) {
        super();
        this._builder = _builder;
        this.enableEnter = false;
        // Whether or not emit the init value after the form is built.
        this.emitInitValue = false;
        this.faEyeSlash = faEyeSlash;
        this.faEye = faEye;
        this.faQuestionCircle = faQuestionCircle;
        this.name = `promptName${formId++}`;
    }
    ngOnInit() {
        this.submitBtnTxt = this.submitBtnTxt || 'Confirm';
        this.cancelBtnTxt = this.cancelBtnTxt || 'Cancel';
        this.submitBtnClasses = this.submitBtnClasses || 'btn-primary';
        this.cancelBtnClasses = this.cancelBtnClasses || 'btn-secondary';
        if (this.autocomplete) {
            this.extFields = this.fields.map(a => {
                const k = `section-polp-bs-prompt-form-${this.autocomplete} ${a.name}`;
                return { ...a, fieldId: uuidv4(), autocompleteKey: k, visible: false };
            });
        }
        else {
            this.extFields = this.fields.map(a => {
                return { ...a, fieldId: uuidv4(), visible: false };
            });
        }
        const a = {};
        this.extFields.forEach(x => {
            a[x.name] = new FormControl(x.value, makeValidations(x.validators));
        });
        this.form = this._builder.group(a);
        this._subr = this.form.valueChanges.subscribe(a => {
            this.notifyValidation();
            this.notifyValueChanges(a);
        });
    }
    ngOnDestroy() {
        this._subr.unsubscribe();
    }
    ngAfterViewInit() {
        if (this.emitInitValue) {
            setTimeout(() => {
                const v = this.form.value;
                this.notifyValidation();
                this.notifyValueChanges(v);
            });
        }
    }
    cancel() {
        this.onCancel.emit(null);
    }
    submit() {
        this.onSave.emit(this.form.value);
    }
    keyEvent(event) {
        if (this.enableEnter && event.keyCode === KEY_CODE.ENTER) {
            if (this.form.valid) {
                this.submit();
            }
        }
    }
}
PromptFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: PromptFormComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
PromptFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.12", type: PromptFormComponent, selector: "polp-bs-prompt-form", inputs: { hideCancelBtn: "hideCancelBtn", hideSubmitBtn: "hideSubmitBtn", submitBtnTxt: "submitBtnTxt", cancelBtnTxt: "cancelBtnTxt", autocomplete: "autocomplete", enableEnter: "enableEnter", cancelBtnClasses: "cancelBtnClasses", submitBtnClasses: "submitBtnClasses", fields: "fields", emitInitValue: "emitInitValue" }, host: { listeners: { "window:keyup": "keyEvent($event)" } }, usesInheritance: true, ngImport: i0, template: "<form [formGroup]=\"form\" name=\"{{name}}\" autocomplete=\"autocomplete ? 'on' : 'off'\">\n    <div class=\"mb-3\" *ngFor=\"let elem of extFields; first as isFirst;\">\n        <ng-container *ngIf=\"autocomplete;else disableTmpl\">            \n            <ng-container [ngSwitch]=\"elem.category\">\n                <!-- Checkbox -->\n                <ng-container *ngSwitchCase=\"'checkbox'\">\n                    <div class=\"form-check\">\n                        <input formControlName=\"{{elem.name}}\"\n                               class=\"form-check-input\"\n                               type=\"checkbox\"\n                               name=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\">\n                        <label class=\"form-check-label\" for=\"{{elem.fieldId}}\">\n                            {{elem.label}}\n                            <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                                *\n                            </span>\n                        </label>\n                        <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                            <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                     [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                            </fa-icon>\n                            <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                                \n                        </span>\n                    </div>                    \n                </ng-container>\n                <!-- Radio -->\n                <ng-container *ngSwitchCase=\"'radio'\">\n                    <label class=\"form-label\" *ngIf=\"elem.label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                                \n                    </span>\n                    <div class=\"form-check mb-2\" *ngFor=\"let o of elem.options; let i = index\">\n                        <input formControlName=\"{{elem.name}}\"\n                               class=\"form-check-input\"\n                               type=\"radio\"\n                               value=\"{{o.value}}\"\n                               name=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId + i}}\">\n                        <label class=\"form-check-label\" for=\"{{elem.fieldId + i}}\">\n                            {{o.label}}\n                        </label>\n                    </div>                    \n                </ng-container>\n                <!-- Select -->\n                <ng-container *ngSwitchCase=\"'select'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                                \n                    </span>                        \n                    <select class=\"form-control\" id=\"{{elem.fieldId}}\">\n                        <option selected>Choose ...</option>\n                        <option *ngFor=\"let o of elem.options\" value=\"{{o.value}}\">\n                            {{o.label}}\n                        </option>\n                    </select>                    \n                </ng-container>\n                <!-- textarea -->\n                <ng-container *ngSwitchCase=\"'textarea'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                                \n                    </span>                        \n                    <textarea formControlName=\"{{elem.name}}\" \n                              id=\"{{elem.fieldId}}\"\n                              name=\"{{elem.name}}\"                          \n                              autosize \n                              [autofocus]=\"isFirst\"\n                              class=\"form-control\">\n                    </textarea>\n                </ng-container>\n                <!-- password -->\n                <ng-container *ngSwitchCase=\"'password'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                                \n                    </span>                        \n                    <div class=\"input-group\">                        \n                        <input formControlName=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\"\n                               name=\"{{elem.name}}\"                           \n                               type=\"{{elem.visible ? 'text' : 'password'}}\"\n                               [autofocus]=\"isFirst\"\n                               autocomplete=\"{{elem.autocomplete || 'new-password'}}\"                               \n                               class=\"form-control\" />\n                        <button class=\"btn btn-outline-secondary icon-only\" type=\"button\"\n                                (click)=\"elem.visible = !elem.visible\">\n                            <fa-icon [icon]=\"elem.visible ? faEyeSlash : faEye\">\n                            </fa-icon>\n                        </button>\n                    </div>\n                </ng-container>\n                <!-- HTML -->\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                                \n                    </span>                        \n                    <div class=\"input-group\">\n                        <editor formControlName=\"{{elem.name}}\"\n                                id=\"{{elem.fieldId}}\"\n                                class=\"form-control p-0 border-0\"\n                                [init]=\"{htmlAllowedTags: ['.*'], htmlAllowedAttrs: ['.*'], extended_valid_elements: '*[.*]', draggable_modal: true }\"\n                                plugins =\"advlist autolink link image lists charmap preview anchor pagebreak searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking table emoticons template help autoresize\"\n                                toolbar =\"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | preview media fullpage | forecolor backcolor emoticons | help\"\n                        >\n                        </editor>\n                    </div>\n                </ng-container>\n                <!-- Otherwise -->\n                <ng-container *ngSwitchDefault>\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                        \n                    <input *ngIf=\"!elem.maskSettings; else maskTmpl\"\n                           formControlName=\"{{elem.name}}\" \n                           autocomplete=\"{{elem.autocompleteKey}}\"\n                           id=\"{{elem.fieldId}}\"\n                           name=\"{{elem.name}}\"                           \n                           type=\"{{elem.category}}\"\n                           [autofocus]=\"isFirst\"\n                           class=\"form-control\" />\n                    <ng-template #maskTmpl>\n                        <input *ngIf=\"elem.maskSettings\"\n                               formControlName=\"{{elem.name}}\"\n                               autocomplete=\"{{elem.autocompleteKey}}\"\n                               id=\"{{elem.fieldId}}\"\n                               name=\"{{elem.name}}\"                           \n                               type=\"{{elem.category}}\"\n                               [autofocus]=\"isFirst\"\n                               mask=\"{{elem.maskSettings.mask}}\"\n                               class=\"form-control\" />\n                    </ng-template>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n        <ng-template #disableTmpl>\n            <ng-container [ngSwitch]=\"elem.category\">\n                <!-- Checkbox -->\n                <ng-container *ngSwitchCase=\"'checkbox'\">\n                    <div class=\"form-check\">\n                        <input formControlName=\"{{elem.name}}\"\n                               class=\"form-check-input\"\n                               type=\"checkbox\"\n                               name=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\">\n                        <label class=\"form-check-label\" for=\"{{elem.fieldId}}\">\n                            {{elem.label}}\n                            <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                                *\n                            </span>\n                        </label>\n                        <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                            <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                     [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                            </fa-icon>\n                            <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                        </span>                                                    \n                    </div>                    \n                </ng-container>\n                <!-- Radio -->\n                <ng-container *ngSwitchCase=\"'radio'\">\n                    <label class=\"form-label\" *ngIf=\"elem.label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                        \n                    <div class=\"form-check mb-2\" *ngFor=\"let o of elem.options; let i = index\">\n                        <input formControlName=\"{{elem.name}}\"\n                               class=\"form-check-input\"\n                               type=\"radio\"\n                               value=\"{{o.value}}\"\n                               name=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId + i}}\">\n                        <label class=\"form-check-label\" for=\"{{elem.fieldId + i}}\">\n                            {{o.label}}\n                        </label>\n                    </div>                    \n                </ng-container>\n                <!-- Select -->\n                <ng-container *ngSwitchCase=\"'select'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                                                \n                    <select class=\"form-control\" id=\"{{elem.fieldId}}\">\n                        <option selected>Choose ...</option>\n                        <option *ngFor=\"let o of elem.options\" value=\"{{o.value}}\">\n                            {{o.label}}\n                        </option>\n                    </select>                    \n                </ng-container>\n                <!-- textarea -->\n                <ng-container *ngSwitchCase=\"'textarea'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                                                \n                    <textarea formControlName=\"{{elem.name}}\" \n                              id=\"{{elem.fieldId}}\"\n                              name=\"{{elem.name}}\"                                                    \n                              autosize \n                              [autofocus]=\"isFirst\"\n                              class=\"form-control\">\n                    </textarea>\n                </ng-container>\n                <!-- password -->\n                <ng-container *ngSwitchCase=\"'password'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                                                \n                    <div class=\"input-group\"> \n                        <input formControlName=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\"\n                               name=\"{{elem.name}}\"                           \n                               type=\"{{elem.visible ? 'text' : 'password'}}\"\n                               [autofocus]=\"isFirst\"\n                               autocomplete=\"{{elem.autocomplete || 'new-password'}}\"\n                               class=\"form-control\" />\n                        <button class=\"btn btn-outline-secondary icon-only\" type=\"button\"\n                                (click)=\"elem.visible = !elem.visible\">\n                            <fa-icon [icon]=\"elem.visible ? faEyeSlash : faEye\">\n                            </fa-icon>\n                        </button>\n                    </div>\n                </ng-container>\n                <!-- HTML -->\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                                                \n                    <div class=\"input-group\">\n                        <editor formControlName=\"{{elem.name}}\"\n                                id=\"{{elem.fieldId}}\"\n                                class=\"form-control p-0 border-0\"                                \n                                [init]=\"{htmlAllowedTags: ['.*'], htmlAllowedAttrs: ['.*'], extended_valid_elements: '*[.*]', draggable_modal: true }\"\n                                plugins =\"advlist autolink link image lists charmap preview anchor pagebreak searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking table emoticons template help autoresize\"\n                                toolbar =\"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image formaticsx | preview media fullpage | forecolor backcolor emoticons | help\"\n                        >\n                        </editor>\n                    </div>\n                </ng-container>\n                <!-- Others -->\n                <ng-container *ngSwitchDefault>\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                                                \n                    <input *ngIf=\"!elem.maskSettings; else anotherMaskTmpl\"\n                           formControlName=\"{{elem.name}}\"\n                           id=\"{{elem.fieldId}}\"\n                           name=\"{{elem.name}}\"                           \n                           type=\"{{elem.category}}\"\n                           [autofocus]=\"isFirst\"\n                           class=\"form-control\" />\n                    <ng-template #anotherMaskTmpl>\n                        <input formControlName=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\"\n                               name=\"{{elem.name}}\"                           \n                               type=\"{{elem.category}}\"\n                               [autofocus]=\"isFirst\"\n                               mask=\"{{elem.maskSettings.mask}}\"\n                               class=\"form-control\" />\n                    </ng-template>\n                </ng-container>\n            </ng-container>\n        </ng-template>                \n\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.required && (form.touched || form.dirty)\">\n            {{elem.validators.required.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.min && (form.touched || form.dirty)\">\n            {{elem.validators.min.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.max && (form.touched || form.dirty)\">\n            {{elem.validators.max.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.pattern && (form.touched || form.dirty)\">\n            {{elem.validators.pattern.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.minlength && (form.touched || form.dirty)\">\n            {{elem.validators.minLength.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.maxlength && (form.touched || form.dirty)\">\n            {{elem.validators.maxLength.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.url && (form.touched || form.dirty)\">\n            {{elem.validators.url.message}}\n        </div>\n    </div>\n    \n    <div class=\"d-flex justify-content-end\">\n        <button *ngIf=\"!hideCancelBtn\"\n                type=\"button\" class=\"btn me-2\"\n                [ngClass]=\"cancelBtnClasses\" (click)=\"cancel()\" >\n            {{cancelBtnTxt}}\n        </button>    \n        <button *ngIf=\"!hideSubmitBtn\"\n                type=\"button\" class=\"btn\"\n                [ngClass]=\"submitBtnClasses\" [disabled]=\"!form.valid\" (click)=\"submit()\">\n            {{submitBtnTxt}}\n        </button>\n    </div>\n    \n</form>\n\n\n", styles: [""], components: [{ type: i2.FaIconComponent, selector: "fa-icon", inputs: ["icon", "title", "spin", "pulse", "mask", "styles", "flip", "size", "pull", "border", "inverse", "symbol", "rotate", "fixedWidth", "classes", "transform", "a11yRole"] }, { type: i3.EditorComponent, selector: "editor", inputs: ["cloudChannel", "apiKey", "init", "id", "initialValue", "outputFormat", "inline", "tagName", "plugins", "toolbar", "modelEvents", "allowedEvents", "ignoreEvents", "disabled"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i4.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i1.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { type: i5.PopoverDirective, selector: "[popover]", inputs: ["adaptivePosition", "popover", "popoverContext", "popoverTitle", "placement", "outsideClick", "triggers", "container", "containerClass", "isOpen", "delay"], outputs: ["onShown", "onHidden"], exportAs: ["bs-popover"] }, { type: i1.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i1.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { type: i1.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { type: i6.AutosizeDirective, selector: "[autosize]", inputs: ["onlyGrow", "useImportant", "minRows", "autosize", "maxRows"], outputs: ["resized"] }, { type: i7.AutofocusDirective, selector: "[autofocus],[attr.autofocus]", inputs: ["autofocus"] }, { type: i4.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { type: i8.MaskDirective, selector: "input[mask], textarea[mask]", inputs: ["mask", "specialCharacters", "patterns", "prefix", "suffix", "thousandSeparator", "decimalMarker", "dropSpecialCharacters", "hiddenInput", "showMaskTyped", "placeHolderCharacter", "shownMaskExpression", "showTemplate", "clearIfNotMatch", "validation", "separatorLimit", "allowNegativeNumbers", "leadZeroDateTime", "triggerOnMaskChange"], outputs: ["maskFilled"], exportAs: ["mask", "ngxMask"] }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: PromptFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'polp-bs-prompt-form', inputs: [
                        'hideCancelBtn',
                        'hideSubmitBtn',
                        'submitBtnTxt',
                        'cancelBtnTxt'
                    ], template: "<form [formGroup]=\"form\" name=\"{{name}}\" autocomplete=\"autocomplete ? 'on' : 'off'\">\n    <div class=\"mb-3\" *ngFor=\"let elem of extFields; first as isFirst;\">\n        <ng-container *ngIf=\"autocomplete;else disableTmpl\">            \n            <ng-container [ngSwitch]=\"elem.category\">\n                <!-- Checkbox -->\n                <ng-container *ngSwitchCase=\"'checkbox'\">\n                    <div class=\"form-check\">\n                        <input formControlName=\"{{elem.name}}\"\n                               class=\"form-check-input\"\n                               type=\"checkbox\"\n                               name=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\">\n                        <label class=\"form-check-label\" for=\"{{elem.fieldId}}\">\n                            {{elem.label}}\n                            <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                                *\n                            </span>\n                        </label>\n                        <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                            <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                     [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                            </fa-icon>\n                            <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                                \n                        </span>\n                    </div>                    \n                </ng-container>\n                <!-- Radio -->\n                <ng-container *ngSwitchCase=\"'radio'\">\n                    <label class=\"form-label\" *ngIf=\"elem.label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                                \n                    </span>\n                    <div class=\"form-check mb-2\" *ngFor=\"let o of elem.options; let i = index\">\n                        <input formControlName=\"{{elem.name}}\"\n                               class=\"form-check-input\"\n                               type=\"radio\"\n                               value=\"{{o.value}}\"\n                               name=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId + i}}\">\n                        <label class=\"form-check-label\" for=\"{{elem.fieldId + i}}\">\n                            {{o.label}}\n                        </label>\n                    </div>                    \n                </ng-container>\n                <!-- Select -->\n                <ng-container *ngSwitchCase=\"'select'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                                \n                    </span>                        \n                    <select class=\"form-control\" id=\"{{elem.fieldId}}\">\n                        <option selected>Choose ...</option>\n                        <option *ngFor=\"let o of elem.options\" value=\"{{o.value}}\">\n                            {{o.label}}\n                        </option>\n                    </select>                    \n                </ng-container>\n                <!-- textarea -->\n                <ng-container *ngSwitchCase=\"'textarea'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                                \n                    </span>                        \n                    <textarea formControlName=\"{{elem.name}}\" \n                              id=\"{{elem.fieldId}}\"\n                              name=\"{{elem.name}}\"                          \n                              autosize \n                              [autofocus]=\"isFirst\"\n                              class=\"form-control\">\n                    </textarea>\n                </ng-container>\n                <!-- password -->\n                <ng-container *ngSwitchCase=\"'password'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                                \n                    </span>                        \n                    <div class=\"input-group\">                        \n                        <input formControlName=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\"\n                               name=\"{{elem.name}}\"                           \n                               type=\"{{elem.visible ? 'text' : 'password'}}\"\n                               [autofocus]=\"isFirst\"\n                               autocomplete=\"{{elem.autocomplete || 'new-password'}}\"                               \n                               class=\"form-control\" />\n                        <button class=\"btn btn-outline-secondary icon-only\" type=\"button\"\n                                (click)=\"elem.visible = !elem.visible\">\n                            <fa-icon [icon]=\"elem.visible ? faEyeSlash : faEye\">\n                            </fa-icon>\n                        </button>\n                    </div>\n                </ng-container>\n                <!-- HTML -->\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                                \n                    </span>                        \n                    <div class=\"input-group\">\n                        <editor formControlName=\"{{elem.name}}\"\n                                id=\"{{elem.fieldId}}\"\n                                class=\"form-control p-0 border-0\"\n                                [init]=\"{htmlAllowedTags: ['.*'], htmlAllowedAttrs: ['.*'], extended_valid_elements: '*[.*]', draggable_modal: true }\"\n                                plugins =\"advlist autolink link image lists charmap preview anchor pagebreak searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking table emoticons template help autoresize\"\n                                toolbar =\"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | preview media fullpage | forecolor backcolor emoticons | help\"\n                        >\n                        </editor>\n                    </div>\n                </ng-container>\n                <!-- Otherwise -->\n                <ng-container *ngSwitchDefault>\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                        \n                    <input *ngIf=\"!elem.maskSettings; else maskTmpl\"\n                           formControlName=\"{{elem.name}}\" \n                           autocomplete=\"{{elem.autocompleteKey}}\"\n                           id=\"{{elem.fieldId}}\"\n                           name=\"{{elem.name}}\"                           \n                           type=\"{{elem.category}}\"\n                           [autofocus]=\"isFirst\"\n                           class=\"form-control\" />\n                    <ng-template #maskTmpl>\n                        <input *ngIf=\"elem.maskSettings\"\n                               formControlName=\"{{elem.name}}\"\n                               autocomplete=\"{{elem.autocompleteKey}}\"\n                               id=\"{{elem.fieldId}}\"\n                               name=\"{{elem.name}}\"                           \n                               type=\"{{elem.category}}\"\n                               [autofocus]=\"isFirst\"\n                               mask=\"{{elem.maskSettings.mask}}\"\n                               class=\"form-control\" />\n                    </ng-template>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n        <ng-template #disableTmpl>\n            <ng-container [ngSwitch]=\"elem.category\">\n                <!-- Checkbox -->\n                <ng-container *ngSwitchCase=\"'checkbox'\">\n                    <div class=\"form-check\">\n                        <input formControlName=\"{{elem.name}}\"\n                               class=\"form-check-input\"\n                               type=\"checkbox\"\n                               name=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\">\n                        <label class=\"form-check-label\" for=\"{{elem.fieldId}}\">\n                            {{elem.label}}\n                            <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                                *\n                            </span>\n                        </label>\n                        <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                            <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                     [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                            </fa-icon>\n                            <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                        </span>                                                    \n                    </div>                    \n                </ng-container>\n                <!-- Radio -->\n                <ng-container *ngSwitchCase=\"'radio'\">\n                    <label class=\"form-label\" *ngIf=\"elem.label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                        \n                    <div class=\"form-check mb-2\" *ngFor=\"let o of elem.options; let i = index\">\n                        <input formControlName=\"{{elem.name}}\"\n                               class=\"form-check-input\"\n                               type=\"radio\"\n                               value=\"{{o.value}}\"\n                               name=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId + i}}\">\n                        <label class=\"form-check-label\" for=\"{{elem.fieldId + i}}\">\n                            {{o.label}}\n                        </label>\n                    </div>                    \n                </ng-container>\n                <!-- Select -->\n                <ng-container *ngSwitchCase=\"'select'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                                                \n                    <select class=\"form-control\" id=\"{{elem.fieldId}}\">\n                        <option selected>Choose ...</option>\n                        <option *ngFor=\"let o of elem.options\" value=\"{{o.value}}\">\n                            {{o.label}}\n                        </option>\n                    </select>                    \n                </ng-container>\n                <!-- textarea -->\n                <ng-container *ngSwitchCase=\"'textarea'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                                                \n                    <textarea formControlName=\"{{elem.name}}\" \n                              id=\"{{elem.fieldId}}\"\n                              name=\"{{elem.name}}\"                                                    \n                              autosize \n                              [autofocus]=\"isFirst\"\n                              class=\"form-control\">\n                    </textarea>\n                </ng-container>\n                <!-- password -->\n                <ng-container *ngSwitchCase=\"'password'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                                                \n                    <div class=\"input-group\"> \n                        <input formControlName=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\"\n                               name=\"{{elem.name}}\"                           \n                               type=\"{{elem.visible ? 'text' : 'password'}}\"\n                               [autofocus]=\"isFirst\"\n                               autocomplete=\"{{elem.autocomplete || 'new-password'}}\"\n                               class=\"form-control\" />\n                        <button class=\"btn btn-outline-secondary icon-only\" type=\"button\"\n                                (click)=\"elem.visible = !elem.visible\">\n                            <fa-icon [icon]=\"elem.visible ? faEyeSlash : faEye\">\n                            </fa-icon>\n                        </button>\n                    </div>\n                </ng-container>\n                <!-- HTML -->\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                                                \n                    <div class=\"input-group\">\n                        <editor formControlName=\"{{elem.name}}\"\n                                id=\"{{elem.fieldId}}\"\n                                class=\"form-control p-0 border-0\"                                \n                                [init]=\"{htmlAllowedTags: ['.*'], htmlAllowedAttrs: ['.*'], extended_valid_elements: '*[.*]', draggable_modal: true }\"\n                                plugins =\"advlist autolink link image lists charmap preview anchor pagebreak searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking table emoticons template help autoresize\"\n                                toolbar =\"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image formaticsx | preview media fullpage | forecolor backcolor emoticons | help\"\n                        >\n                        </editor>\n                    </div>\n                </ng-container>\n                <!-- Others -->\n                <ng-container *ngSwitchDefault>\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                        <span *ngIf=\"elem.hasReqInd\" class=\"text-danger\">\n                            *\n                        </span>\n                    </label>\n                    <span *ngIf=\"elem.helpInfo\" class=\"ms-1\">\n                        <fa-icon [icon]=\"faQuestionCircle\" [popover]=\"popTemplate\"\n                                 [popoverTitle]=\"elem.helpInfo.title\" container=\"body\">\n                        </fa-icon>\n                        <ng-template #popTemplate><div [innerHtml]=\"elem.helpInfo.content\"></div></ng-template>                            \n                    </span>                                                \n                    <input *ngIf=\"!elem.maskSettings; else anotherMaskTmpl\"\n                           formControlName=\"{{elem.name}}\"\n                           id=\"{{elem.fieldId}}\"\n                           name=\"{{elem.name}}\"                           \n                           type=\"{{elem.category}}\"\n                           [autofocus]=\"isFirst\"\n                           class=\"form-control\" />\n                    <ng-template #anotherMaskTmpl>\n                        <input formControlName=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\"\n                               name=\"{{elem.name}}\"                           \n                               type=\"{{elem.category}}\"\n                               [autofocus]=\"isFirst\"\n                               mask=\"{{elem.maskSettings.mask}}\"\n                               class=\"form-control\" />\n                    </ng-template>\n                </ng-container>\n            </ng-container>\n        </ng-template>                \n\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.required && (form.touched || form.dirty)\">\n            {{elem.validators.required.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.min && (form.touched || form.dirty)\">\n            {{elem.validators.min.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.max && (form.touched || form.dirty)\">\n            {{elem.validators.max.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.pattern && (form.touched || form.dirty)\">\n            {{elem.validators.pattern.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.minlength && (form.touched || form.dirty)\">\n            {{elem.validators.minLength.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.maxlength && (form.touched || form.dirty)\">\n            {{elem.validators.maxLength.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.url && (form.touched || form.dirty)\">\n            {{elem.validators.url.message}}\n        </div>\n    </div>\n    \n    <div class=\"d-flex justify-content-end\">\n        <button *ngIf=\"!hideCancelBtn\"\n                type=\"button\" class=\"btn me-2\"\n                [ngClass]=\"cancelBtnClasses\" (click)=\"cancel()\" >\n            {{cancelBtnTxt}}\n        </button>    \n        <button *ngIf=\"!hideSubmitBtn\"\n                type=\"button\" class=\"btn\"\n                [ngClass]=\"submitBtnClasses\" [disabled]=\"!form.valid\" (click)=\"submit()\">\n            {{submitBtnTxt}}\n        </button>\n    </div>\n    \n</form>\n\n\n", styles: [""] }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; }, propDecorators: { autocomplete: [{
                type: Input
            }], enableEnter: [{
                type: Input
            }], cancelBtnClasses: [{
                type: Input
            }], submitBtnClasses: [{
                type: Input
            }], fields: [{
                type: Input
            }], emitInitValue: [{
                type: Input
            }], keyEvent: [{
                type: HostListener,
                args: ['window:keyup', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,