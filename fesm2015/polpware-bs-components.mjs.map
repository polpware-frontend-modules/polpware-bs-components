{"version":3,"file":"polpware-bs-components.mjs","sources":["../../../../projects/polpware/bs-components/src/lib/models/breadcrumb.interface.ts","../../../../projects/polpware/bs-components/src/lib/components/breadcrumb/breadcrumb.component.ts","../../../../projects/polpware/bs-components/src/lib/components/breadcrumb/breadcrumb.component.html","../../../../projects/polpware/bs-components/src/lib/services/breadcrumb-clipboard.service.ts","../../../../projects/polpware/bs-components/src/lib/components/alert-box/alert-box.component.ts","../../../../projects/polpware/bs-components/src/lib/components/alert-box/alert-box.component.html","../../../../projects/polpware/bs-components/src/lib/utils/form-helper.ts","../../../../projects/polpware/bs-components/src/lib/components/prompt-form/prompt-form.component.ts","../../../../projects/polpware/bs-components/src/lib/components/prompt-form/prompt-form.component.html","../../../../projects/polpware/bs-components/src/lib/components/prompt-modal/prompt-modal.component.ts","../../../../projects/polpware/bs-components/src/lib/components/prompt-modal/prompt-modal.component.html","../../../../projects/polpware/bs-components/src/lib/components/email-composer/email-composer.component.ts","../../../../projects/polpware/bs-components/src/lib/components/email-composer/email-composer.component.html","../../../../projects/polpware/bs-components/src/lib/components/expandable-card/expandable-card.component.ts","../../../../projects/polpware/bs-components/src/lib/components/expandable-card/expandable-card.component.html","../../../../projects/polpware/bs-components/src/lib/components/modals/observable-modal-abstract.component.ts","../../../../projects/polpware/bs-components/src/lib/widgets/search-box-widget/search-box-widget.component.ts","../../../../projects/polpware/bs-components/src/lib/widgets/search-box-widget/search-box-widget.component.html","../../../../projects/polpware/bs-components/src/lib/widgets/page-size-options-widget/page-size-options-widget.component.ts","../../../../projects/polpware/bs-components/src/lib/widgets/page-size-options-widget/page-size-options-widget.component.html","../../../../projects/polpware/bs-components/src/lib/bs-components.module.ts","../../../../projects/polpware/bs-components/src/lib/services/bs-modal-assistant.service.ts","../../../../projects/polpware/bs-components/src/lib/services/common-modals.service.ts","../../../../projects/polpware/bs-components/src/public_api.ts","../../../../projects/polpware/bs-components/src/polpware-bs-components.ts"],"sourcesContent":["export enum ActionKind {\n    NO_ACTION = 0,\n    URL_LINK = 1,\n    ROUTER_LINK = 2,\n    CUSTOM_ACTION = 3\n}\n\nexport interface IBreadcrumbItem {\n    title: string;\n    routerLink?: string;\n    queryParams?: { [key: string]: any };\n    url?: string;\n    action?: () => void;\n    kind?: ActionKind;\n}\n\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\n\nimport {\n    ActionKind,\n    IBreadcrumbItem\n} from '../../models/breadcrumb.interface';\n\n/*\n Presumptions: \n 1. items are fixed at the moment of page init\n*/\n\n@Component({\n    selector: 'polp-bs-breadcrumb',\n    templateUrl: './breadcrumb.component.html',\n    styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges {\n\n    @Input() items: IBreadcrumbItem[] = [];\n    @Input() listClasses: string = 'breadcrumb';\n    @Input() inactiveItemClasses: string = 'breadcrumb-item';\n    @Input() activeItemClasses: string = 'breadcrumb-item active';\n\n    interItems: IBreadcrumbItem[] = [];\n    activeItem: IBreadcrumbItem = null;\n\n    ngOnInit() {\n        this.update();\n    }\n\n    ngOnChanges() {\n        this.update();\n    }\n\n    private update() {\n\n        // Pre-process data\n        this.items.forEach(e => {\n            if (e.routerLink) {\n                e.kind = ActionKind.ROUTER_LINK;\n            } else if (e.url) {\n                e.kind = ActionKind.URL_LINK;\n            } else if (e.action) {\n                e.kind = ActionKind.CUSTOM_ACTION;\n            } else {\n                e.kind = ActionKind.NO_ACTION;\n            }\n        });\n\n        this.interItems = [];\n        this.activeItem = null;\n        // Set up interItems and activeItem, and items are\n        // fixed this moment and thus interItems and activeItem\n        if (this.items.length > 0) {\n            // Split the array\n            for (let i = 0; i < this.items.length - 1; i++) {\n                this.interItems.push(this.items[i]);\n            }\n\n            this.activeItem = this.items[this.items.length - 1];\n        }\n    }\n}\n","    <ol [ngClass]=\"listClasses\">\n        <li [ngClass]=\"inactiveItemClasses\" *ngFor=\"let item of interItems\">\n            <ng-container [ngSwitch]=\"item.kind\">\n                <a [href]=\"item.url\" *ngSwitchCase=\"1\">{{item.title}}</a>\n                <a [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams || {}\" *ngSwitchCase=\"2\">{{item.title}}</a>\n                <a (click)=\"item.action()\" *ngSwitchCase=\"3\">{{item.title}}</a>\n                <a *ngSwitchDefault>{{item.title}}</a>                \n            </ng-container>\n        </li>\n        <li [ngClass]=\"activeItemClasses\" aria-current=\"page\" *ngIf=\"activeItem as item\">\n            <ng-container [ngSwitch]=\"item.kind\">\n                <a [href]=\"item.url\" *ngSwitchCase=\"1\">{{item.title}}</a>\n                <a [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams || {}\" *ngSwitchCase=\"2\">{{item.title}}</a>\n                <a (click)=\"item.action()\" *ngSwitchCase=\"3\">{{item.title}}</a>\n                <a *ngSwitchDefault>{{item.title}}</a>                \n            </ng-container>\n        </li>\n    </ol>\n","import { Injectable } from '@angular/core';\n\nimport {\n    IBreadcrumbItem\n} from '../models/breadcrumb.interface';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BreadcrumbClipboardService {\n\n    readonly clipboard: BehaviorSubject<IBreadcrumbItem[]>;\n\n    constructor() {\n        this.clipboard = new BehaviorSubject([]);\n    }\n\n    paste(items: IBreadcrumbItem[]) {\n        this.clipboard.next(items);\n    }\n}\n","import { Component, Input, OnInit, HostListener } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nenum KEY_CODE {\n    ENTER = 13\n}\n\nexport interface IAlertBoxInputs {\n    hideNoBtn?: boolean;\n    yesBtnLabel?: string;\n    noBtnLabel?: string;\n    noBtnClasses?: string;\n    yesBtnClasses?: string;\n    enableEnter?: boolean;\n    title: string;\n    innerBody: string;\n}\n\n@Component({\n    selector: 'polp-bs-alert-box',\n    templateUrl: './alert-box.component.html',\n    styleUrls: ['./alert-box.component.css']\n})\nexport class AlertBoxComponent implements OnInit {\n\n    @Input() hideNoBtn: boolean;\n    @Input() yesBtnLabel: string;\n    @Input() noBtnLabel: string;\n    @Input() noBtnClasses: string;\n    @Input() yesBtnClasses: string;\n\n    @Input() enableEnter: boolean = false;\n\n    @Input() title: string;\n    @Input() innerBody: string;\n\n    result: Subject<boolean> = new Subject();\n\n    constructor(private readonly _bsModalRef: BsModalRef) {\n    }\n\n    ngOnInit(): void {\n        this.hideNoBtn = this.hideNoBtn || false;\n        this.yesBtnLabel = this.yesBtnLabel || 'Yes';\n        this.noBtnLabel = this.noBtnLabel || 'No';\n\n        this.yesBtnClasses = this.yesBtnClasses || 'btn-primary';\n        this.noBtnClasses = this.noBtnClasses || 'btn-secondary';\n    }\n\n    @HostListener('window:keyup', ['$event'])\n    keyEvent(event: KeyboardEvent) {\n        if (this.enableEnter && event.keyCode === KEY_CODE.ENTER) {\n            this.confirm();\n        }\n    }\n\n    close() {\n        this.result.next(false);\n        this.result.complete();\n        this._bsModalRef.hide();\n    }\n\n    confirm() {\n        this.result.next(true);\n        this.result.complete();\n        this._bsModalRef.hide();\n    }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">{{title}}</h4>\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"close()\">\n    </button>\n</div>\n<div class=\"modal-body\">\n    <div [innerHtml]=\"innerBody\">\n    </div>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn me-2\" [ngClass]=\"noBtnClasses\" (click)=\"close()\" *ngIf=\"!hideNoBtn\">\n        {{noBtnLabel}}\n    </button>    \n    <button type=\"button\" class=\"btn\" [ngClass]=\"yesBtnClasses\" (click)=\"confirm()\">\n        {{yesBtnLabel}}\n    </button>\n</div>\n\n\n","import { ValidatorFn, Validators } from '@angular/forms';\r\nimport { buildUrlValidator } from '@polpware/ngx-input-validators';\r\n\r\nexport type IValidationsSpec = {\r\n    [key: string]: {\r\n        value?: any;\r\n        options?: any;\r\n        message: string;\r\n    }\r\n};\r\n\r\nexport interface IInputFieldSpec {\r\n    name: string;\r\n    label: string;\r\n    value: any;\r\n    category: string;\r\n    validators: IValidationsSpec;\r\n    maskSettings?: {\r\n        mask: string;\r\n    },\r\n    options?: Array<{\r\n        value: any;\r\n        label: string;\r\n    }>;\r\n}\r\n\r\nexport function makeValidations(data: IValidationsSpec) {\r\n    const validations = Object.keys(data);\r\n    let x = validations.map(a => {\r\n        switch (a) {\r\n            case 'required':\r\n                return Validators.required;\r\n            case 'min':\r\n                return Validators.min(data.min.value);\r\n            case 'max':\r\n                return Validators.max(data.max.value);\r\n            case 'pattern':\r\n                return Validators.pattern(data.pattern.value);\r\n            case 'minLength':\r\n                return Validators.minLength(data.minLength.value);\r\n            case 'maxLength':\r\n                return Validators.maxLength(data.maxLength.value);\r\n            case 'url':\r\n                return buildUrlValidator(data.url.options);\r\n            default:\r\n                return null;\r\n        }\r\n    });\r\n\r\n    x = x.filter(a => !!a);\r\n\r\n    return Validators.compose(x as ValidatorFn[]);\r\n}\r\n\r\n","import { Component, HostListener, Input, OnDestroy, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport { DefaultFormBaseComponent } from '@polpware/ngx-form-common';\nimport { Subscription } from 'rxjs';\nimport { v4 } from 'uuid';\nimport { IInputFieldSpec, makeValidations } from '../../utils/form-helper';\n\nenum KEY_CODE {\n    ENTER = 13\n}\n\ninterface IInputFieldSpecExt extends IInputFieldSpec {\n    fieldId: string;\n    autocompleteKey?: string;\n    visible: boolean;\n}\n\nfunction uuidv4() {\n    return 'alpha-' + v4();\n}\n\nlet formId = 1;\n\n@Component({\n    selector: 'polp-bs-prompt-form',\n    templateUrl: './prompt-form.component.html',\n    styleUrls: ['./prompt-form.component.css'],\n    inputs: [\n        'hideCancelBtn',\n        'hideSubmitBtn',\n        'submitBtnTxt',\n        'cancelBtnTxt'\n    ]\n})\nexport class PromptFormComponent extends DefaultFormBaseComponent implements OnInit, OnDestroy, AfterViewInit {\n\n    @Input() autocomplete: string;\n    @Input() enableEnter: boolean = false;\n\n    @Input() cancelBtnClasses: string;\n    @Input() submitBtnClasses: string;\n\n    @Input() fields: Array<IInputFieldSpec>;\n\n    // Whether or not emit the init value after the form is built.\n    @Input() emitInitValue: boolean = false;\n\n    extFields: IInputFieldSpecExt[];\n\n    form: FormGroup;\n\n    faEyeSlash = faEyeSlash;\n    faEye = faEye;\n\n    private _subr: Subscription;\n\n    readonly name: string;\n\n    constructor(private readonly _builder: FormBuilder) {\n        super();\n\n        this.name = `promptName${formId++}`;\n    }\n\n    ngOnInit() {\n\n        this.submitBtnTxt = this.submitBtnTxt || 'Confirm';\n        this.cancelBtnTxt = this.cancelBtnTxt || 'Cancel';\n\n        this.submitBtnClasses = this.submitBtnClasses || 'btn-primary';\n        this.cancelBtnClasses = this.cancelBtnClasses || 'btn-secondary';\n\n        if (this.autocomplete) {\n            this.extFields = this.fields.map(a => {\n                const k = `section-polp-bs-prompt-form-${this.autocomplete} ${a.name}`;\n                return { ...a, fieldId: uuidv4(), autocompleteKey: k, visible: false };\n            });\n        } else {\n            this.extFields = this.fields.map(a => {\n                return { ...a, fieldId: uuidv4(), visible: false };\n            });\n        }\n\n        const a = {};\n        this.extFields.forEach(x => {\n            a[x.name] = new FormControl(x.value, makeValidations(x.validators));\n        });\n\n        this.form = this._builder.group(a);\n\n        this._subr = this.form.valueChanges.subscribe(a => {\n            this.notifyValidation();\n            this.notifyValueChanges(a);\n        });\n    }\n\n    ngOnDestroy() {\n        this._subr.unsubscribe();\n    }\n\n    ngAfterViewInit() {\n        if (this.emitInitValue) {\n            setTimeout(() => {\n                const v = this.form.value;\n                this.notifyValidation();\n                this.notifyValueChanges(v);\n            });\n        }\n    }\n\n    cancel() {\n        this.onCancel.emit(null);\n    }\n\n    submit() {\n        this.onSave.emit(this.form.value);\n    }\n\n    @HostListener('window:keyup', ['$event'])\n    keyEvent(event: KeyboardEvent) {\n        if (this.enableEnter && event.keyCode === KEY_CODE.ENTER) {\n            if (this.form.valid) {\n                this.submit();\n            }\n        }\n    }\n}\n","<form [formGroup]=\"form\" name=\"{{name}}\" autocomplete=\"autocomplete ? 'on' : 'off'\">\n    <div class=\"mb-3\" *ngFor=\"let elem of extFields; first as isFirst;\">\n        <ng-container *ngIf=\"autocomplete;else disableTmpl\">            \n            <ng-container [ngSwitch]=\"elem.category\">\n                <!-- Checkbox -->\n                <ng-container *ngSwitchCase=\"'checkbox'\">\n                    <label class=\"form-label\" *ngIf=\"elem.label\">\n                        {{elem.label}}\n                    </label>\n                    <div class=\"form-check\">\n                        <input formControlName=\"{{elem.name}}\"\n                               class=\"form-check-input\"\n                               type=\"checkbox\"\n                               name=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\">\n                        <label class=\"form-check-label\" for=\"{{elem.fieldId}}\">\n                            {{elem.label}}\n                        </label>\n                    </div>                    \n                </ng-container>\n                <!-- Radio -->\n                <ng-container *ngSwitchCase=\"'radio'\">\n                    <label class=\"form-label\" *ngIf=\"elem.label\">\n                        {{elem.label}}\n                    </label>\n                    <div class=\"form-check mb-2\" *ngFor=\"let o of elem.options; let i = index\">\n                        <input formControlName=\"{{elem.name}}\"\n                               class=\"form-check-input\"\n                               type=\"radio\"\n                               value=\"{{o.value}}\"\n                               name=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId + i}}\">\n                        <label class=\"form-check-label\" for=\"{{elem.fieldId + i}}\">\n                            {{o.label}}\n                        </label>\n                    </div>                    \n                </ng-container>\n                <!-- Select -->\n                <ng-container *ngSwitchCase=\"'select'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                    </label>\n                    <select class=\"form-control\" id=\"{{elem.fieldId}}\">\n                        <option selected>Choose ...</option>\n                        <option *ngFor=\"let o of elem.options\" value=\"{{o.value}}\">\n                            {{o.label}}\n                        </option>\n                    </select>                    \n                </ng-container>\n                <!-- textarea -->\n                <ng-container *ngSwitchCase=\"'textarea'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                    </label>\n                    <textarea formControlName=\"{{elem.name}}\" \n                              id=\"{{elem.fieldId}}\"\n                              name=\"{{elem.name}}\"                          \n                              autosize \n                              [autofocus]=\"isFirst\"\n                              class=\"form-control\">\n                    </textarea>\n                </ng-container>\n                <!-- password -->\n                <ng-container *ngSwitchCase=\"'password'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                    </label>\n                    <div class=\"input-group\">                        \n                        <input formControlName=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\"\n                               name=\"{{elem.name}}\"                           \n                               type=\"{{elem.visible ? 'text' : 'password'}}\"\n                               [autofocus]=\"isFirst\"\n                               autocomplete=\"{{elem.autocomplete || 'new-password'}}\"                               \n                               class=\"form-control\" />\n                        <button class=\"btn btn-outline-secondary icon-only\" type=\"button\"\n                                (click)=\"elem.visible = !elem.visible\">\n                            <fa-icon [icon]=\"elem.visible ? faEyeSlash : faEye\">\n                            </fa-icon>\n                        </button>\n                    </div>\n                </ng-container>\n                <!-- HTML -->\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                    </label>\n                    <div class=\"input-group\">\n                        <editor formControlName=\"{{elem.name}}\"\n                                id=\"{{elem.fieldId}}\"\n                                class=\"form-control p-0 border-0\"\n                                [init]=\"{htmlAllowedTags: ['.*'], htmlAllowedAttrs: ['.*'], extended_valid_elements: '*[.*]', draggable_modal: true }\"\n                                plugins =\"advlist autolink link image lists charmap preview anchor pagebreak searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking table emoticons template help autoresize\"\n                                toolbar =\"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | preview media fullpage | forecolor backcolor emoticons | help\"\n                        >\n                        </editor>\n                    </div>\n                </ng-container>\n                <!-- Otherwise -->\n                <ng-container *ngSwitchDefault>\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                    </label>\n                    <input *ngIf=\"!elem.maskSettings; else maskTmpl\"\n                           formControlName=\"{{elem.name}}\" \n                           autocomplete=\"{{elem.autocompleteKey}}\"\n                           id=\"{{elem.fieldId}}\"\n                           name=\"{{elem.name}}\"                           \n                           type=\"{{elem.category}}\"\n                           [autofocus]=\"isFirst\"\n                           class=\"form-control\" />\n                    <ng-template #maskTmpl>\n                        <input *ngIf=\"elem.maskSettings\"\n                               formControlName=\"{{elem.name}}\"\n                               autocomplete=\"{{elem.autocompleteKey}}\"\n                               id=\"{{elem.fieldId}}\"\n                               name=\"{{elem.name}}\"                           \n                               type=\"{{elem.category}}\"\n                               [autofocus]=\"isFirst\"\n                               mask=\"{{elem.maskSettings.mask}}\"\n                               class=\"form-control\" />\n                    </ng-template>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n        <ng-template #disableTmpl>\n            <ng-container [ngSwitch]=\"elem.category\">\n                <!-- Checkbox -->\n                <ng-container *ngSwitchCase=\"'checkbox'\">\n                    <label class=\"form-label\" *ngIf=\"elem.label\">\n                        {{elem.label}}\n                    </label>\n                    <div class=\"form-check\">\n                        <input formControlName=\"{{elem.name}}\"\n                               class=\"form-check-input\"\n                               type=\"checkbox\"\n                               name=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\">\n                        <label class=\"form-check-label\" for=\"{{elem.fieldId}}\">\n                            {{elem.label}}\n                        </label>\n                    </div>                    \n                </ng-container>\n                <!-- Radio -->\n                <ng-container *ngSwitchCase=\"'radio'\">\n                    <label class=\"form-label\" *ngIf=\"elem.label\">\n                        {{elem.label}}\n                    </label>\n                    <div class=\"form-check mb-2\" *ngFor=\"let o of elem.options; let i = index\">\n                        <input formControlName=\"{{elem.name}}\"\n                               class=\"form-check-input\"\n                               type=\"radio\"\n                               value=\"{{o.value}}\"\n                               name=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId + i}}\">\n                        <label class=\"form-check-label\" for=\"{{elem.fieldId + i}}\">\n                            {{o.label}}\n                        </label>\n                    </div>                    \n                </ng-container>\n                <!-- Select -->\n                <ng-container *ngSwitchCase=\"'select'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                    </label>\n                    <select class=\"form-control\" id=\"{{elem.fieldId}}\">\n                        <option selected>Choose ...</option>\n                        <option *ngFor=\"let o of elem.options\" value=\"{{o.value}}\">\n                            {{o.label}}\n                        </option>\n                    </select>                    \n                </ng-container>\n                <!-- textarea -->\n                <ng-container *ngSwitchCase=\"'textarea'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                    </label>\n                    <textarea formControlName=\"{{elem.name}}\" \n                              id=\"{{elem.fieldId}}\"\n                              name=\"{{elem.name}}\"                                                    \n                              autosize \n                              [autofocus]=\"isFirst\"\n                              class=\"form-control\">\n                    </textarea>\n                </ng-container>\n                <!-- password -->\n                <ng-container *ngSwitchCase=\"'password'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                    </label>\n                    <div class=\"input-group\"> \n                        <input formControlName=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\"\n                               name=\"{{elem.name}}\"                           \n                               type=\"{{elem.visible ? 'text' : 'password'}}\"\n                               [autofocus]=\"isFirst\"\n                               autocomplete=\"{{elem.autocomplete || 'new-password'}}\"\n                               class=\"form-control\" />\n                        <button class=\"btn btn-outline-secondary icon-only\" type=\"button\"\n                                (click)=\"elem.visible = !elem.visible\">\n                            <fa-icon [icon]=\"elem.visible ? faEyeSlash : faEye\">\n                            </fa-icon>\n                        </button>\n                    </div>\n                </ng-container>\n                <!-- HTML -->\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                    </label>\n                    <div class=\"input-group\">\n                        <editor formControlName=\"{{elem.name}}\"\n                                id=\"{{elem.fieldId}}\"\n                                class=\"form-control p-0 border-0\"                                \n                                [init]=\"{htmlAllowedTags: ['.*'], htmlAllowedAttrs: ['.*'], extended_valid_elements: '*[.*]', draggable_modal: true }\"\n                                plugins =\"advlist autolink link image lists charmap preview anchor pagebreak searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking table emoticons template help autoresize\"\n                                toolbar =\"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image formaticsx | preview media fullpage | forecolor backcolor emoticons | help\"\n                        >\n                        </editor>\n                    </div>\n                </ng-container>\n                <!-- Others -->\n                <ng-container *ngSwitchDefault>\n                    <label for=\"{{elem.fieldId}}\" class=\"form-label\">\n                        {{elem.label}}\n                    </label>\n                    <input *ngIf=\"!elem.maskSettings; else anotherMaskTmpl\"\n                           formControlName=\"{{elem.name}}\"\n                           id=\"{{elem.fieldId}}\"\n                           name=\"{{elem.name}}\"                           \n                           type=\"{{elem.category}}\"\n                           [autofocus]=\"isFirst\"\n                           class=\"form-control\" />\n                    <ng-template #anotherMaskTmpl>\n                        <input formControlName=\"{{elem.name}}\"\n                               id=\"{{elem.fieldId}}\"\n                               name=\"{{elem.name}}\"                           \n                               type=\"{{elem.category}}\"\n                               [autofocus]=\"isFirst\"\n                               mask=\"{{elem.maskSettings.mask}}\"\n                               class=\"form-control\" />\n                    </ng-template>\n                </ng-container>\n            </ng-container>\n        </ng-template>                \n\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.required && (form.touched || form.dirty)\">\n            {{elem.validators.required.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.min && (form.touched || form.dirty)\">\n            {{elem.validators.min.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.max && (form.touched || form.dirty)\">\n            {{elem.validators.max.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.pattern && (form.touched || form.dirty)\">\n            {{elem.validators.pattern.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.minlength && (form.touched || form.dirty)\">\n            {{elem.validators.minLength.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.maxlength && (form.touched || form.dirty)\">\n            {{elem.validators.maxLength.message}}\n        </div>\n        <div class=\"form-text text-danger\" *ngIf=\"form.controls[elem.name].errors?.url && (form.touched || form.dirty)\">\n            {{elem.validators.url.message}}\n        </div>\n    </div>\n    \n    <div class=\"d-flex justify-content-end\">\n        <button *ngIf=\"!hideCancelBtn\"\n                type=\"button\" class=\"btn me-2\"\n                [ngClass]=\"cancelBtnClasses\" (click)=\"cancel()\" >\n            {{cancelBtnTxt}}\n        </button>    \n        <button *ngIf=\"!hideSubmitBtn\"\n                type=\"button\" class=\"btn\"\n                [ngClass]=\"submitBtnClasses\" [disabled]=\"!form.valid\" (click)=\"submit()\">\n            {{submitBtnTxt}}\n        </button>\n    </div>\n    \n</form>\n\n\n","import { Component, Input, OnInit, Output } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { IInputFieldSpec } from '../../utils/form-helper';\n\nexport interface IPromptFormInputs {\n    autocomplete?: string;\n    enableEnter?: boolean;\n\n    hideCancelBtn?: boolean;\n    hideCloseBtn?: boolean;\n    hideConfirmBtn?: boolean;\n\n    cancelBtnLabel?: string;\n    confirmBtnLabel?: string;\n    cancelBtnClasses?: string;\n    confirmBtnClasses?: string;\n\n    title: string;\n    innerBody: string;\n    fields: Array<IInputFieldSpec>;\n}\n\n@Component({\n    selector: 'polp-bs-prompt-modal',\n    templateUrl: './prompt-modal.component.html',\n    styleUrls: ['./prompt-modal.component.css']\n})\nexport class PromptModalComponent implements OnInit {\n\n    @Input() autocomplete: string;\n    @Input() enableEnter: boolean = false;\n\n    @Input() hideCancelBtn: boolean = false;\n    @Input() hideConfirmBtn: boolean = false;\n\n    @Input() hideCloseBtn: boolean = false;\n\n    @Input() cancelBtnLabel: string;\n    @Input() confirmBtnLabel: string;\n    @Input() cancelBtnClasses: string;\n    @Input() confirmBtnClasses: string;\n\n    @Input() title: string;\n    @Input() innerBody: string;\n    @Input() fields: Array<IInputFieldSpec>;\n\n    @Output() result: Subject<{ [key: string]: any }>;\n\n    constructor(\n        private readonly _bsModalRef: BsModalRef) {\n        this.result = new Subject();\n    }\n\n    ngOnInit(): void {\n    }\n\n    close() {\n        this.result.next(null);\n        this.result.complete();\n        this._bsModalRef.hide();\n    }\n\n    confirm(value: { [key: string]: any }) {\n        this.result.next(value);\n        this.result.complete();\n        this._bsModalRef.hide();\n    }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">{{title}}</h4>\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"close()\" *ngIf=\"!hideCloseBtn\">\n    </button>\n</div>\n<div class=\"modal-body\">\n    <div [innerHtml]=\"innerBody\">\n    </div>\n    <polp-bs-prompt-form [fields]=\"fields\"\n                         [hideCancelBtn]=\"hideCancelBtn\"\n                         [hideSubmitBtn]=\"hideConfirmBtn\"\n                         [cancelBtnTxt]=\"cancelBtnLabel\"\n                         [submitBtnTxt]=\"confirmBtnLabel\"\n                         [cancelBtnClasses]=\"cancelBtnClasses\"\n                         [submitBtnClasses]=\"confirmBtnClasses\"\n                         [autocomplete]=\"autocomplete\"\n                         [enableEnter]=\"enableEnter\"\n                         (onCancel)=\"close()\"\n                         (onSave)=\"confirm($event)\">\n    </polp-bs-prompt-form>\n</div>\n","import { Component, AfterViewInit, Output, EventEmitter, Input, OnInit } from '@angular/core';\nimport { EmailFormAbstractComponent, AlertTypeEnum } from '@polpware/ngx-email-composer';\n\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n    selector: 'polp-email-composer',\n    templateUrl: './email-composer.component.html',\n    styleUrls: ['./email-composer.component.css']\n})\nexport class EmailComposerComponent extends EmailFormAbstractComponent\n    implements AfterViewInit, OnInit {\n\n    faSpinner = faSpinner;\n\n    @Input() initEmails: string[] = [];\n    @Input() isHtmlBody = false;\n\n    @Output()\n    onClose = new EventEmitter();\n\n    constructor() {\n        super();\n    }\n\n    get bsAlertType() {\n        switch (this.alertType) {\n            case AlertTypeEnum.info:\n                return 'info';\n            case AlertTypeEnum.error:\n                return 'danger';\n            case AlertTypeEnum.success:\n                return 'success';\n            case AlertTypeEnum.warning:\n                return 'warning';\n            default:\n                return 'info';\n        }\n    }\n\n    ngOnInit() {\n        if (this.initEmails && Array.isArray(this.initEmails)) {\n            this.emails = [...this.initEmails];\n        }\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            this.emailInputBox.focus(true);\n        }, 200);\n    }\n\n    // Override\n    submit() {\n\n        // Sanity check\n        if (!this.messageTitle ||\n            !this.messageBody ||\n            !this.emails.length) {\n            this.alertType = AlertTypeEnum.error;\n            this.alertMessage = 'Please provide required values and try again!';\n            this.alertSubMessage = '';\n            this.alertDismissible = true;\n            return;\n        } else {\n            this.alertType = AlertTypeEnum.none;\n            this.alertMessage = '';\n            this.alertSubMessage = '';\n            this.alertDismissible = true;\n        }\n\n        super.submit();\n    }\n\n    close() {\n        this.onClose.emit();\n    }\n\n}\n","<alert [type]=\"bsAlertType\" [dismissible]=\"alertDismissible\" *ngIf=\"alertType > 0\">\n    <p>\n        {{alertMessage}}\n    </p>\n</alert>\n\n<div>\n    <div class=\"mb-4\">\n        <label class=\"form-label\">Recipients</label>\n        <tag-input [(ngModel)]=\"emails\" #emailInputBox\n                   name=\"emailInputs\"\n                   (focusout)=\"onOutOfTagInput($event)\"\n                   (onTextChange)=\"textChanged($event)\"\n                   [addOnPaste]=\"true\"\n                   [modelAsStrings]=\"true\"\n                   [trimTags]=\"true\"\n                   [editable]=\"true\"\n                   [errorMessages]=\"errorMessages\"\n                   [validators]=\"validators\"\n                   [secondaryPlaceholder]=\"'Emails'\"\n                   [separatorKeyCodes]=\"[32,44,58,59]\"\n                   [displayBy]=\"'display'\"\n                   [identifyBy]=\"'value'\"                       \n                   [placeholder]=\"'+ Email'\">\n            <tag-input-dropdown [autocompleteItems]=\"autocompleteItemsAsync | async\">\n                <ng-template let-item=\"item\" let-index=\"index\">\n                    {{ item.display }}\n                </ng-template>\n            </tag-input-dropdown>\n        </tag-input>\n    </div>\n\n    <div class=\"mb-4\">\n        <label for=\"messageTitleInput\" class=\"form-label\">Subject</label>\n        <input name=\"messageTitleInput\" id=\"messageTitleInput\" aria-describedby=\"messageTitleHelp\"\n               class=\"form-control\"\n               [(ngModel)]=\"messageTitle\" #messageTitleCtrl=\"ngModel\" required>\n        <div id=\"messageTitleHelp\"\n             class=\"form-text text-danger\" *ngIf=\"!messageTitleCtrl.valid && messageTitleCtrl.touched\">\n            Subject is required.\n        </div>\n    </div>\n\n    <div class=\"mb-4\" *ngIf=\"isHtmlBody; else textBody\">\n        <label class=\"form-label\">Message</label>\n        <editor [(ngModel)]=\"messageBody\"\n                #emailBody\n                #messageBodyCtrl=\"ngModel\"               \n                name=\"messageBodyInput\"\n                class=\"form-control p-0 border-0\"                \n                [init]=\"{htmlAllowedTags: ['.*'], htmlAllowedAttrs: ['.*'], extended_valid_elements: '*[.*]', draggable_modal: true }\"\n                plugins =\"advlist autolink link image lists charmap preview anchor pagebreak searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking table emoticons template help autoresize\"\n                toolbar =\"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | preview media fullpage | forecolor backcolor emoticons | help\"\n        >\n        </editor>\n        <div id=\"messageBodyHelp\" class=\"form-text\">\n            Body message is required.\n        </div>\n    </div>\n    <ng-template #textBody>\n        <div class=\"mb-4\">\n            <label for=\"messageBodyInput\" class=\"form-label\">Message</label>        \n            <textarea name=\"messageBodyInput\" id=\"messageBodyInput\" aria-describedby=\"messageBodyHelp\"\n                      class=\"form-control\"\n                      #emailBody\n                      autosize [minRows]=\"5\" [maxRows]=\"10\"\n                      [(ngModel)]=\"messageBody\" #messageBodyCtrl=\"ngModel\" required>\n            </textarea>\n            <div id=\"messageBodyHelp\"\n                 class=\"form-text text-danger\" *ngIf=\"!messageBodyCtrl.valid && messageBodyCtrl.touched\">\n                Body message is required.\n            </div>\n        </div>\n    </ng-template>\n\n    <div class=\"d-flex justify-content-end mb-4\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"submit()\" [disabled]=\"alertType == 3\"\n                *ngIf=\"!showCloseBtn; else closeBtnTmpl\">\n            Submit\n            <fa-icon class=\"ms-2\" [icon]=\"faSpinner\" [spin]=\"true\" *ngIf=\"alertType == 3\"></fa-icon>\n        </button>\n        <ng-template #closeBtnTmpl>\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">\n                Close\n            </button>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { faChevronDown, faChevronRight, faChevronUp } from '@fortawesome/free-solid-svg-icons';\n\nlet GlobalElementId = 1;\n\n@Component({\n    selector: 'polp-bs-expandable-card',\n    templateUrl: './expandable-card.component.html',\n    styleUrls: ['./expandable-card.component.css']\n})\nexport class ExpandableCardComponent implements OnInit {\n\n    @Input() isCollapsed = false;\n    @Input() titleClass = '';\n\n    faChevronUp = faChevronUp;\n    faChevronDown = faChevronDown;\n    faChevronRight = faChevronRight;\n\n    elementId: string;\n\n    constructor() {\n        this.elementId = 'expandableCardBody' + GlobalElementId++;\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div class=\"card\">\n    <a class=\"card-header\" (click)=\"isCollapsed = !isCollapsed\"\n       [attr.aria-expanded]=\"!isCollapsed\" [attr.aria-controls]=\"elementId\">\n        <ng-content select=\"[title]\"></ng-content>        \n        <fa-icon [icon]=\"isCollapsed ? faChevronRight : faChevronDown\"></fa-icon>\n    </a>\n    <div class=\"card-body\" id=\"{{elementId}}\" [collapse]=\"isCollapsed\" [isAnimated]=\"true\">\n        <ng-content select=\"[body]\"></ng-content>\n    </div>\n</div>\n","import { Input, Directive } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\n\n/**\n * Provides a base for most modal components.  This base is built with\n * the capability of synchronousely waiting for a modal to close.\n */\n@Directive()\nexport abstract class ObservableModalAbstractComponent<TInput, TOutput> {\n\n    @Input() modalId: number;\n\n    result: Subject<TOutput> = new Subject();\n\n    public abstract bsModalRef: BsModalRef;\n    protected abstract bsModalService: BsModalService;\n\n    closeModal(value: TOutput) {\n        this.result.next(value);\n        this.result.complete();\n\n        if (this.modalId) {\n            this.bsModalService.hide(this.modalId);\n        } else {\n            this.bsModalRef.hide();\n        }\n    }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'polp-bs-search-box-widget',\n    templateUrl: './search-box-widget.component.html',\n    styleUrls: ['./search-box-widget.component.css']\n})\nexport class SearchBoxWidgetComponent implements OnInit, OnDestroy {\n\n    faSearch = faSearch;\n    faTimes = faTimes;\n\n    @Input() initKeyword: string;\n    @Input() formClass = 'border rounded my-2 py-4 px-4 bg-light';\n    @Input() inputClass = 'form-control';\n    @Input() prependText = 'Filter';\n    @Input() debounceTime = 500;\n    // todo: More inputs\n\n    // Allowing for disabling auto search\n    @Input() minLength: number = 0;\n\n    @Output() onSearch: EventEmitter<void> = new EventEmitter();\n\n    // Support filter\n    @ViewChild('searchControlElem')\n    searchControlElem: ElementRef;\n    // Search control input\n    public searchControl: FormControl;\n    anyFutureKeyword: string;\n    // effective keyword\n    effectiveKeyword: string;\n\n    _searchKeywordSubr: Subscription;\n\n    private _emitEvent: boolean = false;\n\n    constructor() { }\n\n    set emitEvent(v: boolean) {\n        this._emitEvent = v;\n    }\n\n    get emitEvent() {\n        const old = this._emitEvent;\n        this._emitEvent = false;\n        return old;\n    }\n\n    ngOnInit(): void {\n        this.searchControl = new FormControl(this.initKeyword || '');\n        this.effectiveKeyword = this.initKeyword;\n        this.startObserveSearchKeyword();\n    }\n\n    ngOnDestroy(): void {\n        this.stopObserveSearchKeyword();\n    }\n\n    // Cancel typed keyword and\n    // reset to whatever the previous state\n    //\n    // This operation does not cause new network request.\n    public cancelTypedKeyword() {\n        this.searchControl.setValue('');\n\n        // Auto focus the search input\n        this.searchControlElem.nativeElement.focus();\n    }\n\n    // Starts a new round of search\n    //\n    // This operation causes new network request.\n    public kickOffSearch() {\n        this.effectiveKeyword = this.anyFutureKeyword;\n        this.onSearch.emit();\n    }\n\n    public resetKeyword(emitEvent: boolean = false) {\n        this.emitEvent = emitEvent;\n        this.cancelTypedKeyword();\n    }\n\n    // Start to listen for search keyword change\n    startObserveSearchKeyword() {\n        this._searchKeywordSubr = this.searchControl.valueChanges\n            .pipe(debounceTime(this.debounceTime))\n            .subscribe(a => {\n                a = (a || '').toLowerCase();\n                this.anyFutureKeyword = a;\n                if (this.minLength > 0 && this.anyFutureKeyword.length >= this.minLength) {\n                    this.kickOffSearch();\n                } else if (this.emitEvent) {\n                    this.kickOffSearch();\n                }\n            });\n    }\n\n    stopObserveSearchKeyword() {\n        this._searchKeywordSubr && this._searchKeywordSubr.unsubscribe();\n    }\n\n\n}\n","<form [ngClass]=\"formClass\" (ngSubmit)=\"kickOffSearch()\">\n    <div class=\"input-group\">\n        <span class=\"input-group-text\" *ngIf=\"prependText\">{{prependText}}</span>\n        <input [ngClass]=\"inputClass\" type=\"text\" #searchControlElem\n               [formControl]=\"searchControl\"\n               [autofocus]=\"true\" />\n        <button class=\"btn btn-secondary icon-only\" type=\"button\" *ngIf=\"anyFutureKeyword\"\n                tooltip=\"Cancel\"\n                (click)=\"resetKeyword(true)\">\n            <fa-icon [icon]=\"faTimes\"></fa-icon>                \n        </button>\n        <button class=\"btn btn-primary icon-only\" type=\"submit\"\n                tooltip=\"Search\">\n            <fa-icon [icon]=\"faSearch\"></fa-icon>                \n        </button>\n    </div>\n</form>\n\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'polp-bs-page-size-options-widget',\n    templateUrl: './page-size-options-widget.component.html',\n    styleUrls: ['./page-size-options-widget.component.css']\n})\nexport class PageSizeOptionsWidgetComponent implements OnInit {\n\n    @Input() initSize = 40;\n    @Input() options: number[] = [40, 100, 200, 400, 800];\n\n    @Output() onChange = new EventEmitter<number>();\n\n    size: number = 40;\n\n    constructor() { }\n\n    ngOnInit(): void {\n        this.size = this.initSize;\n    }\n\n    changeSize(s: number) {\n        this.size = s;\n        this.onChange.emit(s);\n    }\n\n}\n","<nav aria-label=\"page size options\">\n    <ul class=\"pagination\">\n        <ng-container *ngFor=\"let o of options\">\n            <li class=\"page-item\" [ngClass]=\"{'active': size == o}\">\n                <a class=\"page-link\" (click)=\"changeSize(o)\">{{o}}</a>\n            </li>\n        </ng-container>\n    </ul>\n</nav>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FtAutofocusModule } from '@40three/ngx-autofocus-directive';\n\nimport { AutosizeModule } from 'ngx-autosize';\n\nimport { TagInputModule } from 'ngx-chips';\n\nimport { NgxMaskModule } from 'ngx-mask';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\n\nimport { EditorModule } from '@tinymce/tinymce-angular';\n\nimport { AlertBoxComponent } from './components/alert-box/alert-box.component';\nimport { BreadcrumbComponent } from './components/breadcrumb/breadcrumb.component';\nimport { PromptFormComponent } from './components/prompt-form/prompt-form.component';\nimport { EmailComposerComponent } from './components/email-composer/email-composer.component';\nimport { PromptModalComponent } from './components/prompt-modal/prompt-modal.component';\nimport { ExpandableCardComponent } from './components/expandable-card/expandable-card.component';\nimport { SearchBoxWidgetComponent } from './widgets/search-box-widget/search-box-widget.component';\nimport { PageSizeOptionsWidgetComponent } from './widgets/page-size-options-widget/page-size-options-widget.component';\n\n@NgModule({\n    declarations: [\n        BreadcrumbComponent,\n        AlertBoxComponent,\n        PromptFormComponent,\n        EmailComposerComponent,\n        PromptModalComponent,\n        ExpandableCardComponent,\n        SearchBoxWidgetComponent,\n        PageSizeOptionsWidgetComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AlertModule,\n        ModalModule,\n        CollapseModule,\n        FontAwesomeModule,\n        FtAutofocusModule,\n        AutosizeModule,\n        TagInputModule,\n        NgxMaskModule,\n        EditorModule\n    ],\n    exports: [\n        BreadcrumbComponent,\n        AlertBoxComponent,\n        PromptFormComponent,\n        EmailComposerComponent,\n        PromptModalComponent,\n        ExpandableCardComponent,\n        SearchBoxWidgetComponent,\n        PageSizeOptionsWidgetComponent\n    ]\n})\nexport class PolpBsComponentsModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BsModalAssistantService {\n\n    private _modalId: number = 0;\n    constructor() { }\n\n    get modalId() {\n        this._modalId++;\n        return this._modalId;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { AlertBoxComponent } from '../components/alert-box/alert-box.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommonModalsService {\n\n    constructor(private readonly _modalService: BsModalService) { }\n\n    showConfirmAsync(title: string, innerBody: string, modalClasses: string = 'modal-dialog-centered') {\n        const modalRef = this._modalService.show(AlertBoxComponent, {\n            animated: true,\n            keyboard: false,\n            class: modalClasses,\n            initialState: {\n                enableEnter: true,\n                title: title,\n                innerBody: innerBody\n            },\n            ignoreBackdropClick: true\n        });\n\n        return modalRef.content.result.toPromise() as Promise<boolean>;\n    }\n}\n","/*\n * Public API Surface of bs-components\n */\n\nexport * from './lib/models/breadcrumb.interface';\nexport * from './lib/components/breadcrumb/breadcrumb.component';\nexport * from './lib/services/breadcrumb-clipboard.service';\n\nexport * from './lib/components/alert-box/alert-box.component';\nexport * from './lib/components/prompt-form/prompt-form.component';\nexport * from './lib/components/prompt-modal/prompt-modal.component';\n\nexport * from './lib/components/email-composer/email-composer.component';\n\nexport * from './lib/components/expandable-card/expandable-card.component';\n\nexport * from './lib/components/modals/observable-modal-abstract.component';\n\nexport * from './lib/utils/form-helper';\n\nexport * from './lib/bs-components.module';\n\nexport * from './lib/services/bs-modal-assistant.service';\n\nexport * from './lib/components/modals/child-modal-state.interface';\n\nexport * from './lib/components/modals/has-child-modal.interface';\n\nexport * from './lib/services/common-modals.service';\n\nexport * from './lib/widgets/search-box-widget/search-box-widget.component';\nexport * from './lib/widgets/page-size-options-widget/page-size-options-widget.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["KEY_CODE","i1","i2","i4","i2.PromptFormComponent","i3","i5","i6","i7"],"mappings":"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"}